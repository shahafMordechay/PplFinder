{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","hooks/useFavoriteFetch.js","pages/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","InfiniteList","InfiniteScroll","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","SearchFilter","users","isLoading","checkBoxItems","fetchUsers","favorites","fetchFavorites","fetchMoreUsers","useState","hoveredUserId","setHoveredUserId","Set","checkedNat","setCheckedNat","searchText","setSearchText","handleMouseLeave","onChangeCheckBox","newCheckedNat","has","delete","add","Array","from","join","onFavoriteClick","email","get","then","val","del","set","isFavorite","index","map","user","includes","userIncludesSearchText","name","title","first","last","location","street","number","toString","city","country","getFilteredUsers","filter","TextField","fullWidth","helperText","e","target","id","dataLength","length","next","hasMore","scrollableTarget","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","IconButton","onClick","useFavoriteFetch","setUsers","setIsLoading","a","values","favoriteUsers","useEffect","Home","Content","Header","nations","axios","response","data","results","concat","usePeopleFetch","Favorites","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","setValue","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","component","Link","to","AppRouter","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.da513d7b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = () => {\r\n    onChange && onChange(value);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n`;\r\n\r\nexport const InfiniteList = styled(InfiniteScroll)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 350px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n\r\nexport const SearchFilter = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { get, set, del } from \"idb-keyval\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport * as S from \"./style\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst UserList = ({\r\n  users,\r\n  isLoading,\r\n  checkBoxItems,\r\n  fetchUsers,\r\n  favorites,\r\n  fetchFavorites,\r\n  fetchMoreUsers,\r\n}) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [checkedNat, setCheckedNat] = useState(new Set());\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  // CheckBox filtering\r\n  const onChangeCheckBox = (value) => {\r\n    const newCheckedNat = new Set(checkedNat);\r\n\r\n    if (newCheckedNat.has(value)) {\r\n      newCheckedNat.delete(value);\r\n    } else {\r\n      newCheckedNat.add(value);\r\n    }\r\n\r\n    setCheckedNat(newCheckedNat);\r\n    fetchUsers(Array.from(newCheckedNat).join(\",\"));\r\n  };\r\n\r\n  // Favorite button\r\n  const onFavoriteClick = () => {\r\n    const email = users[hoveredUserId].email;\r\n    get(email)\r\n      .then((val) => {\r\n        if (val) {\r\n          del(email);\r\n        } else {\r\n          set(email, users[hoveredUserId]);\r\n        }\r\n      })\r\n      .then(() => {\r\n        fetchFavorites();\r\n      });\r\n  };\r\n\r\n  const isFavorite = (index) => {\r\n    return favorites.map((user) => user.email).includes(users[index].email);\r\n  };\r\n\r\n  // Infinity scroll\r\n  const onInfiniteScrollNext = () => {\r\n    if (searchText.length < 1) {\r\n      fetchMoreUsers?.(Array.from(checkedNat).join(\",\"));\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  // Real time search\r\n  const handleSearchChange = (e) => {\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  const userIncludesSearchText = (user) => {\r\n    return (\r\n      user?.name.title.includes(searchText) ||\r\n      user?.name.first.includes(searchText) ||\r\n      user?.name.last.includes(searchText) ||\r\n      user?.email.includes(searchText) ||\r\n      user?.location.street.number.toString().includes(searchText) ||\r\n      user?.location.street.name.includes(searchText) ||\r\n      user?.location.city.includes(searchText) ||\r\n      user?.location.country.includes(searchText)\r\n    );\r\n  };\r\n\r\n  const getFilteredUsers = () => {\r\n    return users.filter(userIncludesSearchText);\r\n  };\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.SearchFilter>\r\n        <TextField\r\n          fullWidth\r\n          color=\"primary\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          helperText=\"Search existing users\"\r\n          value={searchText}\r\n          onChange={handleSearchChange}\r\n        />\r\n      </S.SearchFilter>\r\n      <S.Filters>\r\n        {checkBoxItems &&\r\n          checkBoxItems.map((filter, index) => (\r\n            <CheckBox\r\n              key={index}\r\n              value={filter.value}\r\n              label={filter.label}\r\n              isChecked={checkedNat.has(filter.value)}\r\n              onChange={onChangeCheckBox}\r\n            />\r\n          ))}\r\n      </S.Filters>\r\n      <S.List id=\"infinityList\">\r\n        <S.InfiniteList\r\n          dataLength={getFilteredUsers().length}\r\n          next={onInfiniteScrollNext}\r\n          hasMore={users.length <= 300}\r\n          scrollableTarget=\"infinityList\"\r\n        >\r\n          {getFilteredUsers().map((user, index) => {\r\n            return (\r\n              <S.User\r\n                key={index}\r\n                onMouseEnter={() => handleMouseEnter(index)}\r\n                onMouseLeave={handleMouseLeave}\r\n              >\r\n                <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                <S.UserInfo>\r\n                  <Text size=\"22px\" bold>\r\n                    {user?.name.title} {user?.name.first} {user?.name.last}\r\n                  </Text>\r\n                  <Text size=\"14px\">{user?.email}</Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.street.number} {user?.location.street.name}\r\n                  </Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.city} {user?.location.country}\r\n                  </Text>\r\n                </S.UserInfo>\r\n                <S.IconButtonWrapper\r\n                  isVisible={index === hoveredUserId || isFavorite(index)}\r\n                >\r\n                  <IconButton onClick={onFavoriteClick}>\r\n                    <FavoriteIcon color=\"error\" />\r\n                  </IconButton>\r\n                </S.IconButtonWrapper>\r\n              </S.User>\r\n            );\r\n          })}\r\n          {isLoading && (\r\n            <S.SpinnerWrapper>\r\n              <Spinner\r\n                color=\"primary\"\r\n                size=\"45px\"\r\n                thickness={6}\r\n                variant=\"indeterminate\"\r\n              />\r\n            </S.SpinnerWrapper>\r\n          )}\r\n        </S.InfiniteList>\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { values } from \"idb-keyval\";\r\n\r\nexport const useFavoriteFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const favoriteUsers = await values();\r\n    setIsLoading(false);\r\n    setUsers(favoriteUsers);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch, useFavoriteFetch } from \"hooks\";\r\nimport * as S from \"../style\";\r\n\r\nconst Home = () => {\r\n  const nations = [\r\n    { value: \"BR\", label: \"Brazil\" },\r\n    { value: \"AU\", label: \"Australia\" },\r\n    { value: \"CA\", label: \"Canada\" },\r\n    { value: \"DE\", label: \"Germany\" },\r\n    { value: \"DK\", label: \"Denmark\" },\r\n  ];\r\n\r\n  const { users, isLoading, fetchUsers, fetchMoreUsers } = usePeopleFetch();\r\n  const favorites = useFavoriteFetch();\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList\r\n          users={users}\r\n          isLoading={isLoading}\r\n          checkBoxItems={nations}\r\n          fetchUsers={fetchUsers}\r\n          favorites={favorites.users}\r\n          fetchFavorites={favorites.fetchUsers}\r\n          fetchMoreUsers={fetchMoreUsers}\r\n        />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers(nations) {\r\n    setIsLoading(true);\r\n    const response = await axios.get(\r\n      `https://randomuser.me/api/?results=25&page=1&inc=name,location,email,picture&nat=${nations}`\r\n    );\r\n    setIsLoading(false);\r\n    setUsers(response.data.results);\r\n  }\r\n\r\n  async function fetchMoreUsers(nations) {\r\n    setIsLoading(true);\r\n    const response = await axios.get(\r\n      `https://randomuser.me/api/?results=25&page=1&inc=name,location,email,picture&nat=${nations}`\r\n    );\r\n    setIsLoading(false);\r\n    setUsers(users.concat(response.data.results));\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers, fetchMoreUsers };\r\n};\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { useFavoriteFetch } from \"hooks\";\r\nimport * as S from \"../style\";\r\n\r\nconst Favorites = () => {\r\n  const { users, isLoading, fetchUsers } = useFavoriteFetch();\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFavorites\r\n          </Text>\r\n        </S.Header>\r\n        <UserList\r\n          users={users}\r\n          isLoading={isLoading}\r\n          fetchUsers={fetchUsers}\r\n          favorites={users}\r\n          fetchFavorites={fetchUsers}\r\n        />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} component={Link} to=\"/\" />\r\n        <Tab label=\"Favorites\" index={1} component={Link} to=\"/favorites\" />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home, Favorites } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/favorites\" component={Favorites} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}